name: Deploy React/Vue to Linux via SSH (with password)

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '24'  # Specify the Node.js version you need

      - name: Install dependencies
        run: npm install --force

      - name: Build app
        run: |
          npm run build --force

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Set deployment date
        id: set_date
        run: echo "date=$(date +%d-%m-%Y)" >> "$GITHUB_OUTPUT"

      - name: Create target directory on server
        run: |
          DATE_FOLDER=${{ steps.set_date.outputs.date }}
          echo "Creating directory for deployment: $DATE_FOLDER"
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no \
          ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "mkdir -p /var/www/node.js/vote-admin/$DATE_FOLDER"

      - name: Deploy to Linux server via rsync
        run: |
          DATE_FOLDER=${{ steps.set_date.outputs.date }}
          echo "Deploying to server in directory: $DATE_FOLDER"
          sshpass -p "${{ secrets.SSH_PASSWORD }}" rsync -avz --no-links --exclude '*.git' \
          build/ ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/var/www/node.js/vote-admin/$DATE_FOLDER/

      - name: Create symlink for latest folder
        run: |
          DATE_FOLDER=${{ steps.set_date.outputs.date }}
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} \
          "rm -f /var/www/node.js/vote-admin/latest"
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} \
          "ln -sf /var/www/node.js/vote-admin/$DATE_FOLDER /var/www/node.js/vote-admin/latest"

      - name: Restart Nginx
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no \
          ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "sudo systemctl restart nginx"
